
kubectl drain node-1           - move all pods avay from node
kubectl cordon node-2          - disable launch new pods on a node
kubectl uncordon node-2 

===
Taint \ tollarations

restrict pods to be places on nodes:
taint (node) and tollarations (pods)

kubectl describe node kubemaster | grep Taint     (noschedule - means not schedule pods on this node)

kubectl taint nodes node01 spray=mortein:NoSchedule             -- create taint on a node
the effect must be NoSchedule, PreferNoSchedule or NoExecute.
  *  Currently taint can only apply to node.

tollarate pod to this tainted node:
controlplane ~ âžœ  cat bee.yaml 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: bee
  name: bee
spec:
  containers:
  - image: nginx
    name: bee
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  tolerations:
  - key: spray
    value: mortein
    effect: NoSchedule
    operator: Equal


--------------
remove taint on node:
kubectl taint nodes controlplane node-role.kubernetes.io/control-plane:NoSchedule-

==============================
Label nodes

kubectl label nodes node-1 size=Large

in spec of pod-deffinition:
spec:
  nodeSelector:
    size: Large

(!) but you cant set restrinction - 'not to run on small nodes'
==============================
Set Node Affinity to the deployment to place the pods on node01 only.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue
spec:
  replicas: 3
  selector:
    matchLabels:
      run: nginx
  template:
    metadata:
      labels:
        run: nginx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: color
                operator: In
                values:
                - blue

====================================
