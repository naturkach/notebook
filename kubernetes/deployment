kubectl get deployments
kubectl get rs                                                     show replicasets
kubectl create deployment <deploymentname> --image httpd:latest
kubectl describe deployment <deploymentname>
kubectl scale deployment <deploymentname> --replicas 4   
kubectl autoscale deployment <deploymentname> --min=3 --max=6 --cpu-percent=80
kubectl get hpa                                                   show Horizontal Auto Scalers

kubectl set image deployment/firstdep k8sphp=naturkach/k8sphp:latest --record         change immage in deployment (deployment file itself will not be changed)
kubectl rollout history deployment/firstdep                       deploument history	
kubectl rollout status deployment/firstdep                        deployment status	
kubectl rollout undo deployment/firstdep                          rollout to previouse version
kubectl rollout undo deployment/firstdep --to-revision=2          rollout to revision 2 (number from history)
kubectl rollout restart deployment/firstdep                       redeploy deployment

kubectl delete deployments firstdep                               remove firstdep deployment

============================
deployment strategies:
recreate       -- down all old version, create new one (downtime for recraetion)
rolling update -- update all pods one-by-one  (default stratagy)
============================

cat deploy-manifest-scail.yaml 
apiVersion : apps/v1
kind: Deployment
metadata:
  name: my-web-deployment-scaling
  labels:
    app: my-k8s-app
    env: prod
spec:
  replicas: 2
  selector:
    matchLabels:
      project: project3
  template:
    metadata:
      labels:
        project: project3
    spec:
      containers:
        - name: project3-web
          image: naturkach/k8sphp:ver2
          ports:
            - containerPort: 80

---
apiVersion : autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: my-autoscaling
  spec:
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: my-web-deployment-scaling
    minReplicas: 2
    maxReplicas: 3
    metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 70
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
